name: Build Executables

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: [ '8.x' ]
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set dotnet
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          # cache: true

      # Step 3: Install dependencies
      - name: Install dependencies
        run: dotnet restore

      # Step 4: Build Executables
      - name: Build
        run:  dotnet publish -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true

      # Step 5: Check local files
      - name: Check local files
        if: ${{ github.event_name != 'release' }}
        run: |
          Get-ChildItem -Path XMLPatch -Recurse | Select-Object FullName, Length, LastWriteTime
          Get-ChildItem -Path XMLDiff -Recurse | Select-Object FullName, Length, LastWriteTime
        shell: powershell


      # Step 10: Scan with VirusTotal
      -
        name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v4
        with:
          update_release_body: true
          vt_api_key: ${{ secrets.VT_API_KEY }}
          github_token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          request_rate: 4
          files: |
            ${{ github.event_name == 'release' && '.exe$' || '*.exe' }}
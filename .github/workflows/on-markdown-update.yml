name: React on README.md Updates

on:
  push:
    branches:
      - main
    paths:
      - '*.md'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  react-on-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Define file masks
        id: define-file-masks
        run: |
          echo "file_masks='README.md'" >> $GITHUB_ENV

      - name: Get changed files
        id: changed-markdown-files
        run: |
          # Initialize variables
          changed_files=""
          deleted_files=""
          any_changes="false"

          # Loop through each file mask and check for changes
          for mask in ${{ env.file_masks }}; do
            # Get the list of changed files for the current mask
            current_changed_files=$(git diff --name-status ${{ github.event.before }} ${{ github.event.after }} | grep '^[AM]' | grep "${mask}" | awk '{print $2}')
            # Get the list of deleted files for the current mask
            current_deleted_files=$(git diff --name-status ${{ github.event.before }} ${{ github.event.after }} | grep '^D' | grep "${mask}" | awk '{print $2}')
            # Check if there are any changes for the current mask
            current_any_changed=$(git diff --name-status ${{ github.event.before }} ${{ github.event.after }} | grep "${mask}" | wc -l)

            # Append the current changed files to the overall list
            if [ -n "$current_changed_files" ]; then
              changed_files="$changed_files $current_changed_files"
            fi

            # Append the current deleted files to the overall list
            if [ -n "$current_deleted_files" ]; then
              deleted_files="$deleted_files $current_deleted_files"
            fi

            # Set any_changes to true if there are any changes for the current mask
            if [ "$current_any_changed" -gt 0 ]; then
              any_changes="true"
            fi
          done

          # Set the outputs
          echo "changed_files=${changed_files}" >> $GITHUB_OUTPUT
          echo "deleted_files=${deleted_files}" >> $GITHUB_OUTPUT
          echo "any_changed=${any_changes}" >> $GITHUB_OUTPUT

      - name: Install python3
        if: steps.changed-markdown-files.outputs.any_changed == 'true'
        run: sudo apt-get update && sudo apt-get install -y python3

      - name: Clone markdown-to-bbcode repository
        if: steps.changed-markdown-files.outputs.any_changed == 'true'
        run: |
          git clone https://github.com/chemodun/markdown-to-bbcode-simple.git

      - name: Process *.md changes
        if: steps.changed-markdown-files.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.changed_files }}
          DELETED_FILES: ${{ steps.changed-markdown-files.outputs.deleted_files }}
        run: |
          git config user.name "Chem O'Dun"
          git config user.email "chemodun@gmail.com"
          for file_changed in ${CHANGED_FILES}; do
            for conversion_type in egosoft nexus; do
              echo "Converting $file_changed to $conversion_type"
              python3 markdown-to-bbcode-simple/markdown_to_bbcode.py -t $conversion_type -o "Docs" "$file_changed"
              if [[ $? -ne 0 ]]; then
                echo "Error converting $file_changed to $conversion_type" >&2
              else
                echo "Converted $file_changed to $conversion_type"
                file_converted="${file_changed%.md}.$conversion_type"
                git add "Docs/$file_converted"
                if [[ $? -ne 0 ]]; then
                  echo "Error adding Docs/$file_converted to git" >&2
                else
                  echo "Added Docs/$file_converted to git"
                fi
              fi
            done
          done
          for file_deleted in ${DELETED_FILES}; do
            for conversion_type in egosoft nexus; do
              file_to_delete="Docs/${file_deleted%.md}.$conversion_type"
              if [[ -f "$file_to_delete" ]]; then
                echo "Deleting $file_to_delete"
                git rm "$file_to_delete"
                if [[ $? -ne 0 ]]; then
                  echo "Error deleting $file_to_delete" >&2
                else
                  echo "Deleted $file_to_delete"
                fi
              fi
            done
          done
          rm -rf markdown-to-bbcode-simple

      - name: Commit and push changes
        if: steps.changed-markdown-files.outputs.any_changed == 'true'
        run: |
          if [[ -n $(git status -uno --porcelain) ]]; then
            git commit -m "docs(bbcode): Update bbcode files"
            git push
            if [[ $? -ne 0 ]]; then
              echo "Error pushing changes" >&2
            else
              echo "Changes pushed successfully"
            fi
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}